{"ast":null,"code":"var _jsxFileName = \"/Users/vladprus/Documents/GitHub/edu/src/Advanced/3-Context/Context.jsx\",\n    _s = $RefreshSig$();\n\nimport { Content } from \"./Content\";\nimport React, { useContext } from \"react\";\nimport { textContext } from \"./textContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst themes = {\n  light: \"#00000\",\n  dark: \"fffff\"\n};\nexport const ThemeContext = /*#__PURE__*/React.createContext(themes.light);\nexport const Context = () => {\n  _s();\n\n  let text = useContext(textContext);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: themes.dark,\n    children: /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Context, \"TmJh5N/6RGnGQj05H8cC7h/6ZH0=\");\n\n_c = Context;\n\nvar _c;\n\n$RefreshReg$(_c, \"Context\");","map":{"version":3,"sources":["/Users/vladprus/Documents/GitHub/edu/src/Advanced/3-Context/Context.jsx"],"names":["Content","React","useContext","textContext","themes","light","dark","ThemeContext","createContext","Context","text"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,WAAxB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE,QADM;AAEbC,EAAAA,IAAI,EAAE;AAFO,CAAf;AAKA,OAAO,MAAMC,YAAY,gBAAGN,KAAK,CAACO,aAAN,CAAoBJ,MAAM,CAACC,KAA3B,CAArB;AAEP,OAAO,MAAMI,OAAO,GAAG,MAAM;AAAA;;AAC3B,MAAIC,IAAI,GAAGR,UAAU,CAACC,WAAD,CAArB;AAEA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEC,MAAM,CAACE,IAArC;AAAA,2BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARM;;GAAMG,O;;KAAAA,O","sourcesContent":["import { Content } from \"./Content\";\nimport React, { useContext } from \"react\";\nimport { textContext } from \"./textContext\";\n\nconst themes = {\n  light: \"#00000\",\n  dark: \"fffff\",\n};\n\nexport const ThemeContext = React.createContext(themes.light);\n\nexport const Context = () => {\n  let text = useContext(textContext);\n\n  return (\n    <ThemeContext.Provider value={themes.dark}>\n      <Content />\n    </ThemeContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}